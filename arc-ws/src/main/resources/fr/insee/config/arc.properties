#Propertie file to configure the web-service application

#Dev environnement ?
fr.insee.arc.environnement.is.dev=true

# repertoires du batch
fr.insee.arc.batch.parametre.repertoire=${env.applicationDirectory}

## ARC-DEV depuis eclipse
fr.insee.database.poolName=arc
fr.insee.database.arc.url=${env.urlDatabase}
fr.insee.database.arc.username=${env.usernameDatabase}
fr.insee.database.arc.password=${env.passwordDatabase}
fr.insee.database.arc.driverClassName=org.postgresql.Driver

#Schema in the DB
fr.insee.database.arc.schema=arc

## log4j2 configuration file
fr.insee.arc.log.XMLconfiguration=${env.logSettings:fr/insee/config/log4j2.xml}

# Keycloak configuration - leave blank or don't overload the keycloack.json environment variables to disable
# Keycloak configuration file in the classpath (default)
keycloak.resource=keycloak.json
# Keycloak configuration file in the file system
keycloak.file=
# Role-based access restriction - leave blank to disable
fr.insee.arc.roles.admin=
# Restricted user account. Leave blank to ignore
fr.insee.database.arc.restrictedUsername=${env.restrictedUserDatabase:}

# Path to log output file - leave blank to log to consoleAppender
fr.insee.arc.log.directory=
fr.insee.arc.log.level=ERROR

# Properties for horizontal scaling on kubernetes
fr.insee.arc.kubernetes.api.uri=${env.kubernetesApiUri:}
fr.insee.arc.kubernetes.api.namespace=${env.kubernetesApiNamespace:}
## Access token to kubernetes api will be searched first in pod path. If not found, tokenValue will be used as access token
fr.insee.arc.kubernetes.api.token.path=${env.kubernetesApiTokenPath:}
fr.insee.arc.kubernetes.api.token.value=${env.kubernetesApiTokenValue:}
fr.insee.arc.kubernetes.executor.image=${env.kubernetesExecutorImage:}
fr.insee.arc.kubernetes.executor.number=${env.kubernetesExecutorNumber:0}
fr.insee.arc.kubernetes.executor.label=${env.kubernetesExecutorLabel:}
fr.insee.arc.kubernetes.executor.user=${env.kubernetesExecutorUser:}
fr.insee.arc.kubernetes.executor.database=${env.kubernetesExecutorDatabase:}
fr.insee.arc.kubernetes.executor.port=${env.kubernetesExecutorPort:}
fr.insee.arc.kubernetes.executor.cpu=${env.kubernetesExecutorCpu:}
fr.insee.arc.kubernetes.executor.ram=${env.kubernetesExecutorRam:}
fr.insee.arc.kubernetes.executor.ephemeral=${env.kubernetesExecutorEphemeral:}
fr.insee.arc.kubernetes.executor.ephemeral.volumeSize=${env.kubernetesExecutorEphemeralVolumeSize:}
fr.insee.arc.kubernetes.executor.volatile=${env.kubernetesExecutorVolatile:}

# Properties to activate export phase
fr.insee.arc.process.export=${env.processExport:}

# input s3 bucket where to receive files
fr.insee.arc.s3.input.api.uri=${env.s3InputApiUri:}
fr.insee.arc.s3.input.bucket=${env.s3InputBucket:}
fr.insee.arc.s3.input.access=${env.s3InputAccess:}
fr.insee.arc.s3.input.secret=${env.s3InputSecret:}

# output s3 bucket where to export files
fr.insee.arc.s3.output.api.uri=${env.s3OutputApiUri:}
fr.insee.arc.s3.output.bucket=${env.s3OutputBucket:}
fr.insee.arc.s3.output.access=${env.s3OutputAccess:}
fr.insee.arc.s3.output.secret=${env.s3OutputSecret:}
fr.insee.arc.s3.output.parquet.key=${env.s3OutputParquetKey:}

# number of days to keep file in the archive file system
fr.insee.arc.files.retention.days=${env.filesRetentionDays:}
