<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fr.insee</groupId>
		<artifactId>arc</artifactId>
		<version>0.0.2-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<groupId>fr.insee.arc</groupId>
	<artifactId>arc-web</artifactId>
	<packaging>war</packaging>
	<name>arc-web</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.struts2.version>2.5.10.1</project.struts2.version>
	</properties>

	<profiles>
		<profile>
			<id>git-lab</id>
			<properties>
				<plateforme>gitLab</plateforme>
				<root.repo>/..</root.repo>
			</properties>
		</profile>

		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<plateforme>Dev</plateforme>
				<env.urlDatabase>***REMOVED***</env.urlDatabase>
				<env.usernameDatabase>***REMOVED***</env.usernameDatabase>
				<env.passwordDatabase>***REMOVED***</env.passwordDatabase>

				<!-- Settings for War files -->
				<war.local.dir>${basedir}/target</war.local.dir>
				<!-- Insert the remote target directory path for war file -->
				<war.remote.dir>depot</war.remote.dir>
				<war.remote.server.id>arc.cts.dv</war.remote.server.id>
				<!-- Insert the url address of FTP server for war file -->
				<war.remote.url>ftp://dvarctsweblas01.ad.insee.intra</war.remote.url>
			</properties>
		</profile>
	</profiles>

	<!-- *************************************** LA GESTION DES DEPENDANCES
		COMMENCE ICI *************************************** -->
	<dependencies>
		<!-- C'est ici que seront declarées toutes les dépendances du projet. La
			déclaration d'une dépendance se fait de la manière suivante : <dependency>
			<groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.8.2</version>
			<scope>test</scope> </dependency> Les tags <groupId>, <artifactId> et <version>
			servent à identifier la librairie que vous souhaitez ajouter en dépendance.
			Le tag <scope> correspond à la portée des dépendances : - compile (valeur
			par defaut si le tag est omis) : pour la compilation ET l'exécution - runtime
			: pour l'exécution uniquement - test : pour l'exécution des tests - provided
			: librairie déjà présente sur l'environnement d'exécution (exemple : la librairie
			servlet-api, qui sera portée par le serveur d'application) -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>fr.insee.arc</groupId>
			<artifactId>arc-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.insee.arc</groupId>
			<artifactId>arc-core</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.8.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>${project.struts2.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-convention-plugin</artifactId>
			<version>${project.struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-javatemplates-plugin</artifactId>
			<version>${project.struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>${project.struts2.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			   <version>3.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.5</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>insee-releases</id>
			<name>Repository INSEE pour les releases</name>
			<url>dav:http://integration-continue.insee.fr:80/artifactory/libs-releases-local</url>
		</repository>
		<snapshotRepository>
			<id>insee-snapshots</id>
			<name>Repository INSEE pour les snapshots</name>
			<url>dav:http://integration-continue.insee.fr:80/artifactory/libs-snapshots-local</url>
		</snapshotRepository>
	</distributionManagement>


	<!-- ********************************* FIN DE LA GESTION DES DEPENDANCES
		********************************* -->

	<!-- Le tag <build> permet de gérer des éléments ayant trait à la construction
		du projet par Maven, notamment la configuration des plugins quand le comportement
		par défaut de ceux-ci n'est pas adapté. -->
	<build>
		<finalName>arctsweb</finalName>
		<!-- La configuration des plugins se fait au cas par cas, à l'aide de tags
			<plugin>, eux-mêmes contenus dans un tag <plugins>. Le tag se présente de
			la manière suivante (l'exemple est pris sur le plugin "site" dans le fichier
			pom Insee) : <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-site-plugin</artifactId>
			<version>2.0.1</version> <configuration> <locales>fr</locales> </configuration>
			</plugin> Les tags <groupId>, <artifactId> et <version> servent à identifier
			le plugin que vous souhaitez ajouter configurer. Le tag <configuration> est
			celui qui va porter les différents éléments de configuration du plugin. Il
			va de soi que le contenu de ce tag change d'un plugin à l'autre. Dans l'exemple,
			nous demandons au plugin "site" (chargé de créer le site HTML documentaire
			Maven) de générer un site en français. Quasiment tous les plugins possèdent
			un site Internet, sur lequel on pourra trouver les informations nécessaires
			à leur configuration. -->

		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>prod/*.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/webapp/WEB-INF</directory>
			</resource>
		</resources>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.0.0</version>
			</extension>
		</extensions>


		<plugins>
			<!-- Ce plugin est celui qui est utilisé pour construire des archives
				personnalisées à partir d'un projet. Le descripteur "assembly-web.xml" contient
				les fichiers properties de l'application, un fragment de contexte Tomcat,
				la fiche de livraison, et le WAR du projet, conformément aux normes de livraison. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/resources/assembly/assembly-web.xml</descriptor>
					</descriptors>
				</configuration>
				<!-- executions> <execution> <id>make-assembly-src</id> <phase>package</phase>
					<goals> <goal>single</goal> </goals> </execution> </executions -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
			</plugin>

		</plugins>

	</build>
</project>
